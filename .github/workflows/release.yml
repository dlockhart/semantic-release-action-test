name: Release
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: Brightspace/third-party-actions@actions/checkout
      - name: Setup Node
        uses: Brightspace/third-party-actions@actions/setup-node
      - name: Get Repo's Last LMS Release
        id: repo-lms-version
        run: echo "::set-output name=value::$(cat .lmsrelease)"
      - name: Get Active LMS Release
        id: get-lms-version
        uses: Brightspace/lms-version-actions/get-lms-release@main
        with:
          RALLY_API_KEY: ${{ secrets.RALLY_API_KEY }}
      - name: Update Repo's Last LMS Release
        if: steps.repo-lms-version.outputs.VALUE != steps.get-lms-version.outputs.LMS_VERSION
        run: |
          echo "Updating last LMS release..."
          echo "${{ steps.get-lms-version.outputs.LMS_VERSION }}" > .lmsrelease
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .lmsrelease
          git commit -m "feat: updating tracked LMS release version [skip ci]"
          git push --follow-tags --repo=https://${{ inputs.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.D2L_GITHUB_TOKEN }}
      - name: Semantic Release
        id: semantic-release
        uses: ./.github/actions/semantic-release
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test Output
        run: |
          echo version: ${{ steps.semantic-release.outputs.VERSION }} 
